#Has to be provided, even if it is empty
events{}

http {

    #include preconfigured content types
    #(this file should be in the same folder already after nginx installation)
    include mime.types;

    #specify the file extensions for diff. content types
#     types{
#         text/html html;
#         text/css css;
#         image/jpeg jpg;
#     }

    server {
        listen 80;
        server_name 192.168.50.131;

        #Folder, where files are located
        root /home/mike/nginx_learning/static_site;

        location / {
            #status code and response
            return 307 /index.html;
        }

        #configure any path, which starts from /greet, so it can be /greetings or /greet/hello
        location /greet {
            #status code and response
            return 200 "Hello world from prefix configured path!";
        }

        #configure path, which is equal to /hello
        location = /hello {
            return 200 "Hello world from specific path!";
        }

        #configure path, which is equal to REGEXP
        #U can add * after ~ to ignore letters case as well
        location ~ /hello[0-9] {
            return 200 "Hello world from REGEXP path!";
        }

        #There is a hierarchy in nginx for paths:
        #1. Pefix (lowest)
        #2. REGEXP
        #3. path with ^~
        #4. exact (highest)
        #So if there are same paths the nginx will always return the higher priority REGEXP
        location ^~ /hello2 {
            return 200 "Hello world from higher priority REGEXP path!";
        }

        #There are many diff variables containning doff data, for example
        location = /inspect {
            return 200 "Query args: $args\nUri: $uri";
        }

        #U can use custom variables as well
        set $weekend 'Nope';

        if ($date_local ~ 'Saturday|Sunday') {
            set $weekend 'Yes :)';
        }
        location = /is_weekend {
            return 200 $weekend;
        }

        #U can redirect requests:
        location = /meme {
            return 307 /blackcatzoningout_meme.jpg;
        }

        #U can specify some standart redirect if for ex. file is not found:
        try_files $uri /error;

        location = /error {
            return 404 "Something went wrong";
        }

        #U can set up logging
        location = /log {
            access_log /var/log/nginx/my_log_file.log;
            return 200 "Logged to file successfully";
        }

        #U can disable logs:
        access_log off;


    }
}
