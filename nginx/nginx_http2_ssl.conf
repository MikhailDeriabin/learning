#user www-data;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;

    #It is a good idea to disable header, which specifies, which version of nginx is in use (more security)
    server_tokens off;

    #Some another headers for security
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    #U can define how many requests can be made for one connection per amount of time = brute force attack protection
    #1. how to apply the limit( $request_uri = for each end point, $binary_remote_address = for each client) here can be anything
    #2. name of the zone and its size ( 10MB here)
    #3. rate=60r/m (60 requests per min = 1r per second)
    limit_req_zone $request_uri zone=MY_SERVER_ZONE:10m rate=1r/s;

    #Redirect all trafic coming via http to https
    server {
        listen 80;
        server_name $server_ip_address;
        return 301 https://$server_ip_address$request_uri;
    }

    server {
        #Set standard HTTPS port and use ssl module and http2 protocol
        listen 443 ssl http2;
        server_name $server_ip_address;
        root /home/mike/nginx_learning/static_site;

        #This is a pretty basic HTTPS setup. If u use certbot for that, everything will be added automatically to the file
        #Specify the path to certificate and key
        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;

        #Disable old SSL protocol and use newer TLS
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        #Optionaly add cipher, for some security stuff, here in use is the worst one from the security perspective, but which supports all TLSv1-TLSv1.3
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:ECDHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:DES-CBC3-SHA;

        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        #Allow HTTPS only connection (=enable HSTS)
        add_header Strict-Transport-Security "max-age=31536000" always;

        #Cach SSL sessions, so there is no need to make handshake each time => more speed
        #Cach can be shared between all workers and 40 MB in size
        ssl_session_cache shared:SSL:40m;
        #Max time for session 4 hours (=how much cach will  be valid)
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        location = / {
            #U can specify the zone u want to use and change it a little bit here
            #1. burst=5 allow make 5 another requests (=they will not be rejected). However, the client still not gonna get data faster than specified speed(rate) and will have to wait for resp
            #2 nodelay, allow client to get all 5 additional requests (specified in burst) without waiting
            limit_req zone=MY_SERVER_ZONE burst=10 nodelay;
            try_files $uri $uri/ =404;
        }
    }
}